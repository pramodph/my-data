package gsquestions;

public class BuyAndSellStocks {

	public static void main(String[] args) {
		int[]arr= {150,10,30,14,90,120};
		calculateMaxProfit(arr);
		kadanceApproch(arr);
	}

	private static void calculateMaxProfit(int[] arr) {
		int minValue=Integer.MAX_VALUE;
		int maxProfit=0;
		for(int num:arr) {
			if(num<minValue) {
				minValue=num;
			}else {
				maxProfit=Math.max(maxProfit, num-minValue);
			}
		}
		System.out.println(maxProfit);
	}
	//Time and Space complexity is O(n) and O(1)
	
	private static int kadanceApproch(int[] arr) {
		int maxPresent=0;
		for(int i=0;i<arr.length;i++) {
			int diff=arr[i]-arr[i-1];
			maxPresent=Math.max(diff, maxPresent+diff);
		}
	}
}
