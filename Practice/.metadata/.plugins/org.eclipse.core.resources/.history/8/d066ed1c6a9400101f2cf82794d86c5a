package ksumSubArrays;

import java.util.HashSet;

public class CheckSubArraySumK {

	public static void main(String[] args) {
		int [] nums= {2,8,2,6,-6,3,2};
		int k=0;
		//System.out.println(checkSubArraySumEqualK(nums,k));
		System.out.println(optimisedCheckSubArraySumEqualK(nums,k));
		
	}

	private static char[] optimisedCheckSubArraySumEqualK(int[] nums, int k) {
		HashSet<Integer>freqSet=new HashSet<>();
		int n=nums.length;
		freqSet.add(0);
		for(int i=0;i<n;i++) {
			int sum=nums[i]-k;
			if(!freqSet.contains(sum)) {
				freqSet.add(nums[i]);
			}
		}
	}

	private static boolean checkSubArraySumEqualK(int[] nums,int k) {
		
		for(int i=0;i<nums.length;i++) {
			int sum=0;
			for(int j=i;j<nums.length;j++) {
				sum=sum+nums[j];
				if(sum==k) {
					System.out.println("Sum:"+sum+" "+nums[j]);
					return true;
				}
			}
		}
		return false;
	}
}
//TC-O(N) Sc-O(1)
