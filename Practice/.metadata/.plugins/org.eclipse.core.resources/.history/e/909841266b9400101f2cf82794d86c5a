package ksumSubArrays;

import java.util.HashSet;

public class CheckSubArraySumK {

	public static void main(String[] args) {
		int [] nums= {2,8,2,6,-6,3,2};
		int k=5;
		//System.out.println(checkSubArraySumEqualK(nums,k));
		System.out.println(optimisedCheckSubArraySumEqualK(nums,k));
		
	}

	private static boolean optimisedCheckSubArraySumEqualK(int[] nums, int k) {
		HashSet<Integer>freqSet=new HashSet<>();
		freqSet.add(0);//handling k==x;
		int sum=0;
		for(int i=0;i<nums.length;i++) {
			sum+=nums[i];
			int rem=sum-k;
			if(freqSet.contains(rem)) {
				return true;
			}
			freqSet.add(nums[i]);
		}
		return false;
	}

	private static boolean checkSubArraySumEqualK(int[] nums,int k) {
		
		for(int i=0;i<nums.length;i++) {
			int sum=0;
			for(int j=i;j<nums.length;j++) {
				sum=sum+nums[j];
				if(sum==k) {
					System.out.println("Sum:"+sum+" "+nums[j]);
					return true;
				}
			}
		}
		return false;
	}
}
//TC-O(N) Sc-O(1)
